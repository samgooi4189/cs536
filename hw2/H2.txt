/////////////////
// name: Liang Zheng Gooi
// login: gooi
// course: cs536-1
//
//
////////////////

1.a) {SLASH}{STAR}([^*]|[^/])+{STAR}{SLASH}
This does not work because this makes the comment must have at least one character that is NOT(STAR OR SLASH) before the ending */.
Good comment that will not pass : /**/
This also showed wrong usage of OR, when [^*]|[^/] will equal to everything.
Bad comment that will pass : /**/*/

b) {SLASH}{STAR}[^*]*{STAR}+{SLASH}+
This will not work because only accept NOT STAR as comment. 
Good comment that will not pass: /***/
This could take multiple STAR and SLASH at the ending to be valid.
Bad comment that will pass: /****///


c) {SLASH}{STAR}(.)*{STAR}{SLASH}
This will not work because it will take anything for the comment, as long as it ends in {STAR}{SLASH}.
Bad comment that will pass: /**/*/

d) {SLASH}{STAR}[^(*/)]*{STAR}{SLASH}
This will not work because [^(*/)] means that NOT (STAR OR SLASH).
Good comment that won't pass: /*/abc**/


e) {SLASH}{STAR}([^*]{STAR}+[^*/])*{STAR}+{SLASH}
This will not work because this will make the comment to have at least 1 character followed by 1 STAR.
Good comment that will not pass: /*accccc*/
This requires the comment to have at least (NOT STAR)*(NOT SLASH) to work. 
Good comment that will not pass: /*a**/

2.
{SLASH}{STAR}( ([^*][^/][^*] | [^/][^*][^/])* | ([^*][^/])* )* | (.) {SLASH}{STAR}
